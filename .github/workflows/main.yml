# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]  # You can add more versions here if needed.

    steps:
    - uses: actions/checkout@v4  # Checkout the repository code

    # Cache node_modules to speed up builds
    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm ci  # Install dependencies based on the package-lock.json

    - run: npm run build --if-present  # Build the Angular app

    # - run: npm test -- --watch=false --browsers=ChromeHeadlessCI  # Run tests in headless mode

    # Optional: Deploy to GitHub Pages (or other services)
    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v0.0.0
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_CLIENT_ID }} # This is the Azure Token (you can store the API key in GitHub Secrets)
        repo_token: ${{ secrets.GITHUB_TOKEN }}  # This is the GitHub token for access to your repo
        app_location: "/"
        output_location: "dist/your-app-name"  # Path to the build output folder